<!-- Basic components that logger need to run.  -->
<!-- All your configurations for your loggers need to go inside the configuration tags -->
<configuration>
<!-- appenders are how you will tell logback where you want to send your logs -->
<!-- stdout = standard output  class is from logger which tells logger that class ConsoleAppender is from dependency you set in java library-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
<!-- encoders are how you tell logback how to format your logs -->
        <encoder>
            <!-- formate of log -->
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>
        </encoder>

    </appender>

    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
    <!-- the file tags tells logback where we want our log file to be save -->
        <file>logs/staticLogs.log</file>
        <!-- the append tag tells Logback whether to append the file or create a new one each time the app starts -->
        <append>true</append>
        <encoder>
             <pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>
        </encoder>
    </appender>

    <appender name="ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">

    <!-- the file tags tells logback where we want our log file to be save -->
        <file>logs/rollingFile.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        <!-- this sets the pattern for how to create the new log files -->
            <fileNamePattern>rollingLogFile.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- this deternmines how many days worth of logs should be saved -->
            <maxHistory>7</maxHistory>
            <!-- this deternmines the max size of the log file: can trigger a rollover before the max days -->
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <append>true</append>
        <!-- encoders are how you tell logback how to format your logs -->
        <encoder>
            <!-- formate of log -->
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>
        </encoder>

    </appender>
    <!-- root tells logback what your default log setting should be if you don't specify any -->
    <root level="INFO">
        <appender-ref ref="ROLLING"/>
    </root>
</configuration>
<!-- Note that the farther down the list you go, the less info you get. INFO level logging does not include DEBUG or TRACE logs. If we 
set the level to TRACE, you will get all infomation. -->
<!-- 
    Logging levels:
        TRACEï¼š this level gives all the nitty-gritty details of your application(specifiy information)
        DEBUG: Not as much detail as the TRACE level, but enough to do any debugging if necessary
        INFO: This gives general information about your application
        WARN: This level is used when the developer needs to be aware of something, does not need to be catastro
        ERROR: When something actually goes wrong use the error level
        NONE(THIS TURNS OFF LOGGING)
 -->